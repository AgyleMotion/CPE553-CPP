/curvgrid
{
  10 dict begin
  /rows exch def
  /cols exch def
  /scaleval -1 20 div 255 mul def
%  /scaleval -.2 def
  0 1 rows 2 sub
  {
    cols mul /j exch def
    0 1 cols 2 sub
    {
      j add /i exch def
      grid i get       % get this grid cell
      grid i 1 add get
      grid i cols add 1 add get
      grid i cols add get
      length 0 ne
      exch length 0 ne and
      exch length 0 ne and
      exch length 0 ne and
      {
	grid i get       % get this grid cell
	aload
	pop
	pop

	grid i 1 add get  % get the one to the right
	aload
	pop
	pop

	grid i cols add 1 add get % and the one up and to the right
	aload
	pop
	pop

	grid i cols add get      % up
	aload
	pop
	pop
%	drawquad
	grid i get 2 get scaleval %(scale=) print pstack (\n) print % put in the value, put in scale and fill
	fillquad
       } if
    } for
  } for
  end
} bind def

%
% take grid dictionary and draw the edges of all the grid cells
%
/drawcurvgrid
{
  8 dict begin
    /grid exch def
    /rows grid /jmax get def
    /cols grid /imax get def
    /x grid /x get
    /y grid /y get
    0 1 rows 2 sub {
      /j exch def
      0 1 cols 2 sub {
	/i exch def
	x j get i get % current cell
	x j get i 1 add get % to east
	x j 1 add get i 1 add get % to northeast
	x j 1 add get i get % to north
	length 0 ne
	exch length 0 ne and
	exch length 0 ne and
	exch length 0 ne and
	{
	  x j get i get       % get x(i,j),y(i,j)
	  y j get i get

	  x j get i 1 add get % get x(i+1,j), y(i+1,j)
	  y j get i 1 add get

	  x j 1 add i 1 add get % get x(i+1,j+1),y(i+1,j+1)
	  y j 1 add i 1 add get

	  x j 1 add i get        % get x(i,j+1),y(i,j+1)
	  y j 1 add i get
	  drawquad
       } if
    } for
  } for

} bind def
